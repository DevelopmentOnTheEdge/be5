<?xml version="1.0" encoding="UTF-8"?>

<testSuite name="biostore">
 <description>Тесты из BioStore</description>

 <test name="current_role_list">
  <parser>
   <query><![CDATA[select
         s.ID,
         s.name
     from servers s
     LEFT JOIN server_administrators sa ON sa.serverID=s.ID
     WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID=@@username@@ GROUP BY s.ID
     order by 2]]></query>
   <applyContext>
    <userName name='testUser' />
    <role name='User' />
    <role name='GroupAdmin' />
   </applyContext>
   <format dbms="oracle"><![CDATA[SELECT
         s.ID,
         s.name
     FROM servers s
     LEFT JOIN server_administrators sa ON sa.serverID = s.ID
     WHERE 'Administrator' IN ('User', 'GroupAdmin') OR sa.personID ='testUser' GROUP BY s.ID
     ORDER BY 2]]></format>
  </parser>
 </test>
 <test name="complex-case">
  <parser>
   <query><![CDATA[SELECT ID AS "Code", CASE WHEN LENGTH(name ) > 60 THEN CONCAT( SUBSTRING(name,1,60 ),'...') ELSE name END AS "Name" FROM attributeGroups]]></query>
   <format dbms="oracle"><![CDATA[SELECT ID AS "Code", CASE WHEN LENGTH(name ) > 60 THEN  SUBSTR(name, 1, 60 )||'...' ELSE name END AS "Name" FROM attributeGroups]]></format>
  </parser>
 </test>
 <test name="biostore-failed-if">
  <parser>
   <query><![CDATA[SELECT 
 <if parameter="personID"> 
     COALESCE( c.shortName,c.name       )  
        AS "Организация", 
 </if>  
 <if parameter="companyID"> 
     CONCAT( p.lastName,' ' ,p.firstName ,CASE WHEN p.middleName IS NOT NULL THEN CONCAT( ' ',p.middleName                      ) ELSE '' END                    ) 
        AS "Сотрудник", 
 </if>  
     COALESCE( ct.title,e.title       )  
        AS "Должность", 
     e.activeFrom AS "activeFrom", 
     e.activeTo AS "activeTo" 
 FROM employments e 
     INNER JOIN companies c ON c.ID = e.companyID 
        LEFT JOIN corporateTitles ct ON ct.ID = e.titleID 
     INNER JOIN persons p ON p.ID = e.personID]]></query>
   <format dbms="mysql"><![CDATA[SELECT 
 <if parameter="personID"> 
     COALESCE( c.shortName, c.name       )  
        AS "Организация", 
 </if>  
 <if parameter="companyID"> 
     CONCAT( p.lastName, ' ' , p.firstName , CASE WHEN p.middleName IS NOT NULL THEN CONCAT( ' ', p.middleName                      ) ELSE '' END                    ) 
        AS "Сотрудник", 
 </if>  
     COALESCE( ct.title, e.title       )  
        AS "Должность", 
     e.activeFrom AS "activeFrom", 
     e.activeTo AS "activeTo" 
 FROM employments e 
     INNER JOIN companies c ON c.ID = e.companyID 
        LEFT JOIN corporateTitles ct ON ct.ID = e.titleID 
     INNER JOIN persons p ON p.ID = e.personID]]></format>
  </parser>
 </test>
 <test name="free-servers">
  <parser>
   <query><![CDATA[select
         s.ID,
         CONCAT( s.name,' (',tt.payment,')' )
     from servers s
     join products p
         on (p.serverID=s.ID)
     join tariffs t
         on (t.productID=p.ID)
     join tarifftypes tt
         on (t.typeID=tt.ID)
     where type='web server' and tt.payment in ('free', 'trial') and t.status='open'
     order by 2]]></query>
   <format dbms="mysql"><![CDATA[SELECT
         s.ID,
         CONCAT( s.name, ' (', tt.payment, ')' )
     FROM servers s
     INNER JOIN products p
         ON (p.serverID = s.ID)
     INNER JOIN tariffs t
         ON (t.productID = p.ID)
     INNER JOIN tarifftypes tt
         ON (t.typeID = tt.ID)
     WHERE type ='web server' AND tt.payment IN ('free', 'trial') AND t.status ='open'
     ORDER BY 2]]></format>
  </parser>
 </test>
 <test name="join-using">
  <parser>
   <query><![CDATA[select
         p.ID,
         c.name
     from providers p
     join companies c using(ID)
     WHERE 'Administrator' IN @@current-role-list@@ OR 'ServerAdmin' IN @@current-role-list@@
 order by 2]]></query>
   <applyContext/>
   <format dbms="oracle"><![CDATA[SELECT
         p.ID,
         c.name
     FROM providers p
     INNER JOIN companies c USING (ID)
     WHERE 'Administrator' IN ('Guest') OR 'ServerAdmin' IN ('Guest')
 ORDER BY 2]]></format>
  </parser>
 </test>
 <test name="product_subscriptions">
  <parser>
   <query><![CDATA[SELECT
       ss.ID AS "___id",
       IF(st.type='offline',s.name,CONCAT( '<a href="serverRedirect?serverID=',CAST(s.id AS CHAR) ,'" target=_blank>' ,s.name ,'</a>'                  )) AS "Server",
       pr.name AS "Product",
       '<truncate length="25"/>;<link using="___id" table="products" columns="ID"/>' AS ";Product",
       ss.start AS "Start",
       ss."end" AS "End",
       ss.valid AS "Status"
    FROM product_subscriptions ss
         LEFT JOIN persons p ON ss.custID=CONCAT('persons.',p.ID)
         LEFT JOIN tariffs t ON ss.tariffID=t.ID
         LEFT JOIN products pr ON t.productID=pr.ID
         LEFT JOIN servers s ON pr.serverID=s.ID
         LEFT JOIN server_types st ON s.serverTypeID=st.ID
    WHERE p.userName=@@username@@ AND t.status!='disabled'
    ORDER BY 2,3]]></query>
   <format dbms="mysql"><![CDATA[SELECT
       ss.ID AS "___id",
       IF(st.type ='offline', s.name, CONCAT( '<a href="serverRedirect?serverID=', CAST(s.id AS CHAR) , '" target=_blank>' , s.name , '</a>'                  )) AS "Server",
       pr.name AS "Product",
       '<truncate length="25"/>;<link using="___id" table="products" columns="ID"/>' AS ";Product",
       ss.start AS "Start",
       ss.`end` AS "End",
       ss.valid AS "Status"
    FROM product_subscriptions ss
         LEFT JOIN persons p ON ss.custID = CONCAT('persons.', p.ID)
         LEFT JOIN tariffs t ON ss.tariffID = t.ID
         LEFT JOIN products pr ON t.productID = pr.ID
         LEFT JOIN servers s ON pr.serverID = s.ID
         LEFT JOIN server_types st ON s.serverTypeID = st.ID
    WHERE p.userName =@@username@@ AND t.status <>'disabled'
    ORDER BY 2, 3]]></format>
  </parser>
 </test>
 <!-- test name="long-downloads">
  <parser>
   <query><![CDATA[SELECT DISTINCT c.name
   FROM downloads d
   JOIN servers s ON (s.ID=d.serverID)
   JOIN companies c ON (c.ID=s.providerID)
   LEFT JOIN server_administrators sa ON sa.serverID=s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID=@@username@@ OR exists( select 1 from ( select p.serverID,pp.module,pp.permission from products p join ( select distinct t.productID from product_subscriptions ps join ( select concat('groups.',ug.groupID) custID from user_groups ug where ug.personID=@@username@@ union select concat('persons.',@@username@@) ) c on c.custID=ps.custID join tariffs t on t.ID=ps.tariffID where valid='valid' and start<now() and `end`>now() and t.status != 'disabled' union distinct select distinct p.ID from products p where p.availability='free' ) ap on ap.productID=p.ID join product_permissions pp on pp.productID=p.ID union select gp.serverID,gp.module,gp.permission from group_permissions gp join user_groups ug where ug.personID=@@username@@ ) ppp where d.serverID=ppp.serverID and permission&3=3 and substring(d.path,1,length(ppp.module)+1)=concat(ppp.module,'/') )]]></query>
   <format dbms="mysql"><![CDATA[SELECT DISTINCT c.name
   FROM downloads d
   JOIN servers s ON (s.ID=d.serverID)
   JOIN companies c ON (c.ID=s.providerID)
   LEFT JOIN server_administrators sa ON sa.serverID=s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID=@@username@@ OR exists( select 1 from ( select p.serverID,pp.module,pp.permission from products p join ( select distinct t.productID from product_subscriptions ps join ( select concat('groups.',ug.groupID) custID from user_groups ug where ug.personID=@@username@@ union select concat('persons.',@@username@@) ) c on c.custID=ps.custID join tariffs t on t.ID=ps.tariffID where valid='valid' and start<now() and `end`>now() and t.status != 'disabled' union distinct select distinct p.ID from products p where p.availability='free' ) ap on ap.productID=p.ID join product_permissions pp on pp.productID=p.ID union select gp.serverID,gp.module,gp.permission from group_permissions gp join user_groups ug where ug.personID=@@username@@ ) ppp where d.serverID=ppp.serverID and permission&3=3 and substring(d.path,1,length(ppp.module)+1)=concat(ppp.module,'/') )]]></format>
  </parser>
 </test-->
 <test name="download_history">
  <parser>
   <query><![CDATA[SELECT
     dh.id AS "___ID",
     dh.personID AS "___pid",
 <unless parameter="personID">
       CONCAT( per.courtesy, ' ', per.firstName, ' ', per.lastName, ' (', u.emailAddress, ', #', CAST(per.ID AS CHAR), ')' ) AS "User;<link using='___pid' table='Persons' queryName='One record' columns='ID'/>",
 </unless>
     dh.start AS "Started",
     dh.`end` AS "Finished",
     IF(dh.speed < 1024, CONCAT( CAST(TRUNCATE(dh.speed, 2) AS CHAR), ' b/s'),
       IF( dh.speed < 1048576, CONCAT( CAST(TRUNCATE(dh.speed / 1024, 2) AS CHAR), ' kb/s'),
       CONCAT( CAST(TRUNCATE(dh.speed / 1048576, 2) AS CHAR), ' Mb/s'))) AS "Speed",
     dh.status AS "Status"
   FROM download_history dh
   INNER JOIN persons per ON (dh.personID = per.ID)
   INNER JOIN users u ON (u.user_name = dh.personID)
   INNER JOIN downloads d ON (d.ID = dh.downloadID)
   INNER JOIN servers s ON (s.ID = d.serverID)
   LEFT JOIN server_administrators sa ON sa.serverID = s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID =@@username@@
   GROUP BY dh.id ORDER BY dh.start DESC]]></query>
   <format dbms="mysql"><![CDATA[SELECT
     dh.id AS "___ID",
     dh.personID AS "___pid",
 <unless parameter="personID">
       CONCAT( per.courtesy, ' ', per.firstName, ' ', per.lastName, ' (', u.emailAddress, ', #', CAST(per.ID AS CHAR), ')' ) AS "User;<link using='___pid' table='Persons' queryName='One record' columns='ID'/>",
 </unless>
     dh.start AS "Started",
     dh.`end` AS "Finished",
     IF(dh.speed < 1024, CONCAT( CAST(TRUNCATE(dh.speed, 2) AS CHAR), ' b/s'),
       IF( dh.speed < 1048576, CONCAT( CAST(TRUNCATE(dh.speed / 1024, 2) AS CHAR), ' kb/s'),
       CONCAT( CAST(TRUNCATE(dh.speed / 1048576, 2) AS CHAR), ' Mb/s'))) AS "Speed",
     dh.status AS "Status"
   FROM download_history dh
   INNER JOIN persons per ON (dh.personID = per.ID)
   INNER JOIN users u ON (u.user_name = dh.personID)
   INNER JOIN downloads d ON (d.ID = dh.downloadID)
   INNER JOIN servers s ON (s.ID = d.serverID)
   LEFT JOIN server_administrators sa ON sa.serverID = s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID =@@username@@
   GROUP BY dh.id ORDER BY dh.start DESC]]></format>
  </parser>
 </test>
 <test name="downloads-control">
  <parser>
   <query><![CDATA[SELECT
     d.id AS "___ID",
     CONCAT( '<a href=''download?serverID=',CAST(s.id AS CHAR),'&path=',d.path,'''><img src=''icons/download.png'' title=''Download''></a>',' <a href=''q?_t_=download_history&downloadID=',CAST(d.id AS CHAR),'''>History</a>' ) AS "Actions;<nosort/>",
 <unless parameter="serverID">
     CONCAT( '<a href=''q?_qn_=One record&_t_=servers&ID=',CAST(s.id AS CHAR),'''>',s.name,'</a>' ) AS "Server",
 </unless>
     d.path AS "Path",
     CONCAT( CONCAT( '<!--',LPAD(CAST(d.fileSize AS CHAR),20-LENGTH(CAST(d.fileSize AS CHAR)),' '),'-->' ),CASE WHEN d.fileSize < 1024 THEN CONCAT( CAST(d.fileSize AS CHAR),' b' ) ELSE CASE WHEN d.fileSize < 1048576 THEN CONCAT( CAST(TRUNCATE(d.fileSize/1024,2) AS CHAR), kb ) ELSE CONCAT( CAST(TRUNCATE(d.fileSize/1048576,2) AS CHAR), Mb ) END END ) AS "Size",
     d.version AS "Version;<blankNulls/>",
     CONCAT( '<img src=''icons/type-',d.type,'.png'' title=''',d.type,'''>' ) AS "Type",
     CONCAT( '<img src=''icons/availability-',d.availability,'.png'' title=''',d.availability,'''>' ) AS "Availability",
     d.description AS "Description;<blankNulls/>;<quick visible='true'/>",
     d.requirements AS "Requirements;<blankNulls/>;<quick visible='false'/>",
     CASE WHEN (d.urls IS NULL) OR (d.urls='') THEN '' ELSE CONCAT( '<a target=_blank href=''',REPLACE(d.urls,CHAR(13),'''>Click</a>, <a target=_blank href='''),'''>Click</a>' ) END AS "Related URLs;<quick visible='false'/>",
     d.comment AS "Comments;<blankNulls/>",
     d.downloadsCount AS "Number of downloads"
   FROM downloads d
   JOIN servers s ON (s.ID=d.serverID)
   LEFT JOIN server_administrators sa ON sa.serverID=s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID=@@username@@
   GROUP BY d.ID ORDER BY s.name,d.path
]]></query>
   <format dbms="mysql"><![CDATA[SELECT
     d.id AS "___ID",
     CONCAT( '<a href=''download?serverID=', CAST(s.id AS CHAR), '&path=', d.path, '''><img src=''icons/download.png'' title=''Download''></a>', ' <a href=''q?_t_=download_history&downloadID=', CAST(d.id AS CHAR), '''>History</a>' ) AS "Actions;<nosort/>",
 <unless parameter="serverID">
     CONCAT( '<a href=''q?_qn_=One record&_t_=servers&ID=', CAST(s.id AS CHAR), '''>', s.name, '</a>' ) AS "Server",
 </unless>
     d.path AS "Path",
     CONCAT( CONCAT( '<!--', LPAD(CAST(d.fileSize AS CHAR), 20 - LENGTH(CAST(d.fileSize AS CHAR)), ' '), '-->' ), CASE WHEN d.fileSize < 1024 THEN CONCAT( CAST(d.fileSize AS CHAR), ' b' ) ELSE CASE WHEN d.fileSize < 1048576 THEN CONCAT( CAST(TRUNCATE(d.fileSize / 1024, 2) AS CHAR), kb ) ELSE CONCAT( CAST(TRUNCATE(d.fileSize / 1048576, 2) AS CHAR), Mb ) END END ) AS "Size",
     d.version AS "Version;<blankNulls/>",
     CONCAT( '<img src=''icons/type-', d.type, '.png'' title=''', d.type, '''>' ) AS "Type",
     CONCAT( '<img src=''icons/availability-', d.availability, '.png'' title=''', d.availability, '''>' ) AS "Availability",
     d.description AS "Description;<blankNulls/>;<quick visible='true'/>",
     d.requirements AS "Requirements;<blankNulls/>;<quick visible='false'/>",
     CASE WHEN (d.urls IS NULL) OR (d.urls ='') THEN '' ELSE CONCAT( '<a target=_blank href=''', REPLACE(d.urls, CHAR(13), '''>Click</a>, <a target=_blank href='''), '''>Click</a>' ) END AS "Related URLs;<quick visible='false'/>",
     d.comment AS "Comments;<blankNulls/>",
     d.downloadsCount AS "Number of downloads"
   FROM downloads d
   INNER JOIN servers s ON (s.ID = d.serverID)
   LEFT JOIN server_administrators sa ON sa.serverID = s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID =@@username@@
   GROUP BY d.ID ORDER BY s.name, d.path
]]></format>
  </parser>
 </test>
 <!-- test name="downloads-advanced">
  <parser>
   <query><![CDATA[SELECT
 d.id AS "___ID",
 CONCAT( '<center><b>',c.name ,'</b></center>' ) AS "Provider;<grouping/>",
     CONCAT( '<a href=''q?_t_=downloads&_qn_=One record&ID=',CAST(d.id AS CHAR),'''>',REPLACE(REVERSE(SUBSTRING(REVERSE(d.path),INSTR(REVERSE(d.path),'/')+1)), '/', ': '),'</a>' ) AS "Product",
 d.version AS "Version;<blankNulls/>",
 CONCAT( '<img src=''icons/type-',d.type,'.png'' title=''',d.type,'''>','<img src=''icons/availability-',d.availability,'.png'' title=''',d.availability,'''>' ) AS "Type",
     d.description AS "Description;<blankNulls/>",
     d.requirements AS "Requirements;<blankNulls/>",
 CASE WHEN (d.urls IS NULL) OR (d.urls='') THEN '' ELSE CONCAT( '<a target=_blank href=''',REPLACE(d.urls,CHAR(13),'''>Click</a>, <a target=_blank href='''),'''>Click</a>' ) END AS "Related URLs;<blankNulls/>",
     d.downloadsCount AS "Stats",
     CONCAT( '<img src=''icons/download.png'' title=''Download''> <a href=''download?serverID=',CAST(s.id AS CHAR),'&path=',d.path,'''>',SUBSTRING_INDEX(d.path,'/',-1),'</a> (',CASE WHEN d.fileSize < 1024 THEN CONCAT( CAST(d.fileSize AS CHAR),' b' ) ELSE CASE WHEN d.fileSize < 1048576 THEN CONCAT( CAST(TRUNCATE(d.fileSize/1024,2) AS CHAR), kb ) ELSE CONCAT( CAST(TRUNCATE(d.fileSize/1048576,2) AS CHAR), Mb ) END END,')' ) AS "Download;<nosort/>",
     d.comment AS "Comments;<blankNulls/>",
     d.releaseNotes AS "Release notes;<blankNulls/>"
   FROM downloads d
   JOIN servers s ON (s.ID=d.serverID)
   JOIN companies c ON (c.ID=s.providerID)
   LEFT JOIN server_administrators sa ON sa.serverID=s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID=@@username@@ OR exists( select 1 from ( select p.serverID,pp.module,pp.permission from products p join ( select distinct t.productID from product_subscriptions ps join ( select concat("groups.",ug.groupID) custID from user_groups ug where ug.personID=@@username@@ union select concat("persons.",@@username@@) ) c on c.custID=ps.custID join tariffs t on t.ID=ps.tariffID where valid="valid" and start<now() and end>now() and t.status != "disabled" union distinct select distinct p.ID from products p where p.availability="free" ) ap on ap.productID=p.ID join product_permissions pp on pp.productID=p.ID union select gp.serverID,gp.module,gp.permission from group_permissions gp join user_groups ug where ug.personID=@@username@@ ) ppp where d.serverID=ppp.serverID and permission&3=3 and substring(d.path,1,length(ppp.module)+1)=concat(ppp.module,"/") )
   GROUP BY d.ID ORDER BY s.name,d.path
]]></query>
   <format dbms="mysql"><![CDATA[SELECT
 d.id AS "___ID",
 CONCAT( '<center><b>',c.name ,'</b></center>' ) AS "Provider;<grouping/>",
     CONCAT( '<a href=''q?_t_=downloads&_qn_=One record&ID=',CAST(d.id AS CHAR),'''>',REPLACE(REVERSE(SUBSTRING(REVERSE(d.path),INSTR(REVERSE(d.path),'/')+1)), '/', ': '),'</a>' ) AS "Product",
 d.version AS "Version;<blankNulls/>",
 CONCAT( '<img src=''icons/type-',d.type,'.png'' title=''',d.type,'''>','<img src=''icons/availability-',d.availability,'.png'' title=''',d.availability,'''>' ) AS "Type",
     d.description AS "Description;<blankNulls/>",
     d.requirements AS "Requirements;<blankNulls/>",
 CASE WHEN (d.urls IS NULL) OR (d.urls='') THEN '' ELSE CONCAT( '<a target=_blank href=''',REPLACE(d.urls,CHAR(13),'''>Click</a>, <a target=_blank href='''),'''>Click</a>' ) END AS "Related URLs;<blankNulls/>",
     d.downloadsCount AS "Stats",
     CONCAT( '<img src=''icons/download.png'' title=''Download''> <a href=''download?serverID=',CAST(s.id AS CHAR),'&path=',d.path,'''>',SUBSTRING_INDEX(d.path,'/',-1),'</a> (',CASE WHEN d.fileSize < 1024 THEN CONCAT( CAST(d.fileSize AS CHAR),' b' ) ELSE CASE WHEN d.fileSize < 1048576 THEN CONCAT( CAST(TRUNCATE(d.fileSize/1024,2) AS CHAR), kb ) ELSE CONCAT( CAST(TRUNCATE(d.fileSize/1048576,2) AS CHAR), Mb ) END END,')' ) AS "Download;<nosort/>",
     d.comment AS "Comments;<blankNulls/>",
     d.releaseNotes AS "Release notes;<blankNulls/>"
   FROM downloads d
   JOIN servers s ON (s.ID=d.serverID)
   JOIN companies c ON (c.ID=s.providerID)
   LEFT JOIN server_administrators sa ON sa.serverID=s.ID
   WHERE 'Administrator' IN @@current-role-list@@ OR sa.personID=@@username@@ OR exists( select 1 from ( select p.serverID,pp.module,pp.permission from products p join ( select distinct t.productID from product_subscriptions ps join ( select concat("groups.",ug.groupID) custID from user_groups ug where ug.personID=@@username@@ union select concat("persons.",@@username@@) ) c on c.custID=ps.custID join tariffs t on t.ID=ps.tariffID where valid="valid" and start<now() and end>now() and t.status != "disabled" union distinct select distinct p.ID from products p where p.availability="free" ) ap on ap.productID=p.ID join product_permissions pp on pp.productID=p.ID union select gp.serverID,gp.module,gp.permission from group_permissions gp join user_groups ug where ug.personID=@@username@@ ) ppp where d.serverID=ppp.serverID and permission&3=3 and substring(d.path,1,length(ppp.module)+1)=concat(ppp.module,"/") )
   GROUP BY d.ID ORDER BY s.name,d.path
]]></format>
  </parser>
 </test -->
 <test name="order-by-case">
  <parser>
   <query><![CDATA[SELECT 
      c.`___ownerID` AS "toId", 
      ea.address AS "toAddr", 
      CONCAT( p.firstName, ' ', p.lastName ) AS "toName", 
      p.firstName AS "toFirstName", 
      CONCAT( COALESCE(p.courtesy, p.firstName), ' ', p.lastName ) AS "toGreeting", 
      c.name AS "toCompanyName" 
 FROM companies c 
     LEFT JOIN persons p ON c.contactPersonID = p.ID 
     LEFT JOIN emailAddresses ea ON ea.ownerID IN ( c.`___ownerID`, p.`___ownerID` ) 
 ORDER BY CASE WHEN ea.ownerID LIKE 'persons.%' THEN 1 ELSE 2 END
]]></query>
   <applyContext/>
   <format dbms="oracle"><![CDATA[SELECT 
      c."___ownerID" AS "toId", 
      ea.address AS "toAddr", 
       p.firstName || ' '|| p.lastName  AS "toName", 
      p.firstName AS "toFirstName", 
       NVL(p.courtesy, p.firstName)|| ' '|| p.lastName  AS "toGreeting", 
      c.name AS "toCompanyName" 
 FROM companies c 
     LEFT JOIN persons p ON c.contactPersonID = p.ID 
     LEFT JOIN emailAddresses ea ON ea.ownerID IN ( c."___ownerID", p."___ownerID" ) 
 ORDER BY CASE WHEN ea.ownerID LIKE 'persons.%' THEN 1 ELSE 2 END
]]></format>
   <format dbms="mysql"><![CDATA[SELECT 
      c.`___ownerID` AS "toId", 
      ea.address AS "toAddr", 
      CONCAT( p.firstName, ' ', p.lastName ) AS "toName", 
      p.firstName AS "toFirstName", 
      CONCAT( COALESCE(p.courtesy, p.firstName), ' ', p.lastName ) AS "toGreeting", 
      c.name AS "toCompanyName" 
 FROM companies c 
     LEFT JOIN persons p ON c.contactPersonID = p.ID 
     LEFT JOIN emailAddresses ea ON ea.ownerID IN ( c.`___ownerID`, p.`___ownerID` ) 
 ORDER BY CASE WHEN ea.ownerID LIKE 'persons.%' THEN 1 ELSE 2 END
]]></format>
  </parser>
 </test>

 <test name="some-meta-query">
  <parser>
   <query><![CDATA[SELECT
         'operationName' AS "___opername",
         o.table_name AS "___tname",
         o.name AS "___name",
         o.name AS "Name",
         '<link using="___tname,___opername,___name" table="localizedMessages" columns="entity,topic,messageKey"/>' AS ";Name",
         o.type AS "Type",
         CASE WHEN o.type IN ( 'JavaScript', 'JavaScript/server' )
            THEN CONCAT( '<a href="viewText?_t_=operations&_typeColumn_=''text/plain''&_dataColumn_=code&ID=',CAST(o.ID AS CHAR) ,'">{{{Click}}}</a>' )
            ELSE CAST(o.code   AS CHAR) END
              AS "Code",
         o.ID AS "___oid",
         qv.ID AS "___vid",
         CONCAT( 'operations.',o.table_name ,'.' ,o.name ) AS "___eid",
         COALESCE( CONCAT( '<img src="viewBlob?_t_=icons&_typeColumn_=mimeType&_dataColumn_=data&ID=',CAST(i.ID AS CHAR) ,'" />' ),'Click' )
             AS "Icon",
        '<link using="___eid" table="icons" columns="ownerID"/>' AS ";Icon",
         COUNT( DISTINCT opq.queryID ) AS "Usage in queries",
         '<link using="___oid" table="operations_per_query" columns="operID"/>' AS ";Usage in queries",
         COUNT( DISTINCT opr.role_name ) AS "Access",
         '<link using="___vid,___oid" table="operations_per_role" columns="_q_,operID"/>' AS ";Access",
         COUNT( DISTINCT oe.ID ) AS "Extension",
         '<link using="___tname,___name" table="operationExtension" columns="table_name,operation_name"/>' AS ";Extension",

          'Click' AS "Authorization",
         '<link using="___tname,___name" table="operationAuth" columns="table_name,operation_name"/>' AS ";Authorization",
         'Click' AS "Logs",
         '<link using="___tname,___name" table="operationLogs" columns="table_name,operation_name"/>' AS ";Logs",
         'Input fields' AS "Localizations",
         '<link using="___tname,___name" table="localizedMessages" columns="entity,topic"/>' AS ";Localizations"

 FROM operations o
       LEFT JOIN icons i ON i.ownerID = CONCAT( 'operations.',o.table_name ,'.' ,o.name )
       LEFT JOIN operations_per_role opr ON opr.operID = o.ID
       LEFT JOIN operations_per_query opq ON opq.operID = o.ID
       LEFT JOIN operationExtension oe ON oe.table_name = o.table_name AND oe.operation_name = o.name
    , queries qv
 WHERE qv.table_name = 'operations_per_role' AND qv.name = 'Role list'
 GROUP BY o.table_name, o.name, o.type, CAST(o.code AS CHAR), o.ID, qv.ID, i.ID
 ORDER BY o.name]]></query>
   <format dbms="mysql"><![CDATA[SELECT
         'operationName' AS "___opername",
         o.table_name AS "___tname",
         o.name AS "___name",
         o.name AS "Name",
         '<link using="___tname,___opername,___name" table="localizedMessages" columns="entity,topic,messageKey"/>' AS ";Name",
         o.type AS "Type",
         CASE WHEN o.type IN ( 'JavaScript', 'JavaScript/server' )
            THEN CONCAT( '<a href="viewText?_t_=operations&_typeColumn_=''text/plain''&_dataColumn_=code&ID=', CAST(o.ID AS CHAR) , '">{{{Click}}}</a>' )
            ELSE CAST(o.code AS CHAR) END
              AS "Code",
         o.ID AS "___oid",
         qv.ID AS "___vid",
         CONCAT( 'operations.', o.table_name , '.' , o.name ) AS "___eid",
         COALESCE( CONCAT( '<img src="viewBlob?_t_=icons&_typeColumn_=mimeType&_dataColumn_=data&ID=', CAST(i.ID AS CHAR) , '" />' ), 'Click' )
             AS "Icon",
        '<link using="___eid" table="icons" columns="ownerID"/>' AS ";Icon",
         COUNT(DISTINCT opq.queryID ) AS "Usage in queries",
         '<link using="___oid" table="operations_per_query" columns="operID"/>' AS ";Usage in queries",
         COUNT(DISTINCT opr.role_name ) AS "Access",
         '<link using="___vid,___oid" table="operations_per_role" columns="_q_,operID"/>' AS ";Access",
         COUNT(DISTINCT oe.ID ) AS "Extension",
         '<link using="___tname,___name" table="operationExtension" columns="table_name,operation_name"/>' AS ";Extension",

          'Click' AS "Authorization",
         '<link using="___tname,___name" table="operationAuth" columns="table_name,operation_name"/>' AS ";Authorization",
         'Click' AS "Logs",
         '<link using="___tname,___name" table="operationLogs" columns="table_name,operation_name"/>' AS ";Logs",
         'Input fields' AS "Localizations",
         '<link using="___tname,___name" table="localizedMessages" columns="entity,topic"/>' AS ";Localizations"

 FROM operations o
       LEFT JOIN icons i ON i.ownerID = CONCAT( 'operations.', o.table_name , '.' , o.name )
       LEFT JOIN operations_per_role opr ON opr.operID = o.ID
       LEFT JOIN operations_per_query opq ON opq.operID = o.ID
       LEFT JOIN operationExtension oe ON oe.table_name = o.table_name AND oe.operation_name = o.name
    , queries qv
 WHERE qv.table_name = 'operations_per_role' AND qv.name = 'Role list'
 GROUP BY o.table_name, o.name, o.type, CAST(o.code AS CHAR), o.ID, qv.ID, i.ID
 ORDER BY o.name]]></format>
  </parser>
 </test>
</testSuite>
