<?xml version="1.0" encoding="UTF-8"?>

<testSuite name="payments">
 <description>Тестирование реального запроса PAYMENTS_QUERY из
  BeanExplorer\modules\soccalc\src\sql\metadata.m4</description>

 <test name="select_simple">
  <parser>
   <query><![CDATA[SELECT
  "___payID" AS "___ID",
  "___ownerid",
  "___pbid",
  "___receivePersonId",
  "Группа МСП",
  "caseNo" AS "Номер дела",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер дела",
  "caseNo" AS "___caseNo",
  "orderNo" AS "Номер поручения",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер поручения",
  "orderNo" AS "___orderNo",
  "___month",
  "___pboId",
  "___bankAccount",
  "Карточка"
  FROM payments pay]]></query>
   <format dbms="oracle"><![CDATA[SELECT
  "___payID" AS "___ID",
  "___ownerid",
  "___pbid",
  "___receivePersonId",
  "Группа МСП",
  "caseNo" AS "Номер дела",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер дела",
  "caseNo" AS "___caseNo",
  "orderNo" AS "Номер поручения",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер поручения",
  "orderNo" AS "___orderNo",
  "___month",
  "___pboId",
  "___bankAccount",
  "Карточка"
  FROM payments pay]]></format>
  </parser>
 </test>

 <test name="select_if">
  <parser>
   <query><![CDATA[SELECT
  "Карточка",
<if expr="isDeduction==yes">
  <then>
     "Назначенец",
     "Стационар",
  </then>
  <else>
    "personName" AS "Получатель", ";Получатель",
  </else>
</if>
  "Адрес", ";Адрес", 
  "Карточка"
  FROM payments pay]]></query>
   <format dbms="oracle"><![CDATA[SELECT
  "Карточка",
<if expr="isDeduction==yes">
  <then>
     "Назначенец",
     "Стационар",
  </then>
  <else>
    "personName" AS "Получатель", ";Получатель",
  </else>
</if>
  "Адрес", ";Адрес", 
  "Карточка"
  FROM payments pay]]></format>
  </parser>
 </test>

 <test name="select_if_param">
  <parser>
   <query><![CDATA[SELECT
  "Банк", ";Банк",
  "Р.Счет", ";Р.Счет"
<if parameter="___forVerification">
  ,"___birthday" AS "___birthday"
  ,"___searchLastName" AS "___searchLastName"
  ,"___searchFirstName" AS "___searchFirstName"
  ,"___searchMiddleName" AS "___searchMiddleName"
  ,"___birthdayAss" AS "___birthdayAss"
  ,"___searchLastNameAss" AS "___searchLastNameAss"
  ,"___searchFirstNameAss" AS "___searchFirstNameAss"
  ,"___searchMiddleNameAss" AS "___searchMiddleNameAss"
  /*<parameter:___forVerification />*/
</if>
  FROM payments pay]]></query>
   <format dbms="oracle"><![CDATA[SELECT
  "Банк", ";Банк",
  "Р.Счет", ";Р.Счет"
<if parameter="___forVerification">
  , "___birthday" AS "___birthday"
  , "___searchLastName" AS "___searchLastName"
  , "___searchFirstName" AS "___searchFirstName"
  , "___searchMiddleName" AS "___searchMiddleName"
  , "___birthdayAss" AS "___birthdayAss"
  , "___searchLastNameAss" AS "___searchLastNameAss"
  , "___searchFirstNameAss" AS "___searchFirstNameAss"
  , "___searchMiddleNameAss" AS "___searchMiddleNameAss"
  /*<parameter:___forVerification />*/
</if>
  FROM payments pay]]></format>
  </parser>
 </test>

 <test name="select_if_sql">
  <parser>
   <query><![CDATA[SELECT
  "Банк"
<if parameter="___extraData">
 ,'<sql limit="1">SELECT d.num || ' !!!' AS "num" FROM documents d </sql>'
  AS "___passnum"
/*<parameter:___extraData />*/
</if>
  FROM payments pay]]></query>
   <format dbms="oracle"><![CDATA[SELECT
  "Банк"
<if parameter="___extraData">
 , '<sql limit="1"> SELECT d.num || ' !!!' AS "num" FROM documents d </sql>'
  AS "___passnum"
/*<parameter:___extraData />*/
</if>
  FROM payments pay]]></format>
  </parser>
 </test>

 <test name="select_unless">
  <parser>
   <query><![CDATA[SELECT
  "Банк"
<unless parameter="quickCalc">
,
    payReal."currentPayAmount" AS "currentPayAmount",
    payReal."pastPayAmount" AS "pastPayAmount",
    payReal."autoPayAmount" AS "autoPayAmount",
    payReal."indexationPayAmount" AS "indexationPayAmount",
    payReal."payAmount" AS "payAmount"
</unless>
  FROM payments pay]]></query>
   <format dbms="oracle"><![CDATA[SELECT
  "Банк"
<unless parameter="quickCalc">
,
    payReal."currentPayAmount" AS "currentPayAmount",
    payReal."pastPayAmount" AS "pastPayAmount",
    payReal."autoPayAmount" AS "autoPayAmount",
    payReal."indexationPayAmount" AS "indexationPayAmount",
    payReal."payAmount" AS "payAmount"
</unless>
  FROM payments pay]]></format>
  </parser>
 </test>

 <test name="where_in">
  <parser>
   <query><![CDATA[SELECT 
"Л.Счет" AS "___clientAccount"
FROM documents d
WHERE d.typeID IN ( 'ПАСПОРТ РОССИИ' )]]></query>
   <format dbms="oracle"><![CDATA[SELECT 
"Л.Счет" AS "___clientAccount"
FROM documents d
WHERE d.typeID IN ( 'ПАСПОРТ РОССИИ' )]]></format>
  </parser>
 </test>

 <test name="column_sql_where">
  <parser>
   <query><![CDATA[SELECT 
"Л.Счет" AS "___clientAccount",
'<sql limit="1">SELECT ( d.num || ' ' || d.series ) AS "num"
FROM documents d
WHERE d.entity = 'persons' AND d.entityID = <var:___receivePersonId refColumn="persons.ID" />
  AND d.typeID IN ( 'ПАСПОРТ РОССИИ' ) AND 
      ( d.activeFrom <= SYSDATE  AND d.activeTo > SYSDATE  )
</sql>'
  FROM payments pay]]></query>
   <format dbms="oracle"><![CDATA[SELECT 
"Л.Счет" AS "___clientAccount",
'<sql limit="1"> SELECT ( d.num || ' ' || d.series ) AS "num"
FROM documents d
WHERE d.entity = 'persons' AND d.entityID = <var:___receivePersonId refColumn="persons.ID"/>
  AND d.typeID IN ( 'ПАСПОРТ РОССИИ' ) AND 
      ( d.activeFrom <= SYSDATE  AND d.activeTo > SYSDATE  )
</sql>'
  FROM payments pay]]></format>
  </parser>
 </test>
 
 <!--  TODO: parse table names like 'FROM households<parameter:_tcloneid_ default=""/>' -->

 <!-- ////////////////////////////////////////////////////////////////////////// -->

 <sql><![CDATA[
 
SELECT
  "___payID" AS "___ID",
  "___ownerid",
  "___pbid",
  "___receivePersonId",
  "Группа МСП",
  "caseNo" AS "Номер дела",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер дела",
  "caseNo" AS "___caseNo",
  "orderNo" AS "Номер поручения",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер поручения",
  "orderNo" AS "___orderNo",
  "___month",
  "___pboId",
  "___bankAccount",
  "Карточка",
/*<parameter:isDeduction/>*/
<if expr="isDeduction==yes">
  <then>
     "Назначенец",
     "Стационар",
  </then>
  <else>
    "personName" AS "Получатель", ";Получатель",
  </else>
</if>

  "Адрес", ";Адрес", 

  "Отделение", ";Отделение",
  "Участок", ";Участок",
  "Дата", ";Дата",

  "Банк", ";Банк",
  "Р.Счет", ";Р.Счет"

<if parameter="___forVerification">

  ,"___birthday" AS "___birthday"
  ,"___searchLastName" AS "___searchLastName"
  ,"___searchFirstName" AS "___searchFirstName"
  ,"___searchMiddleName" AS "___searchMiddleName"

  ,"___birthdayAss" AS "___birthdayAss"
  ,"___searchLastNameAss" AS "___searchLastNameAss"
  ,"___searchFirstNameAss" AS "___searchFirstNameAss"
  ,"___searchMiddleNameAss" AS "___searchMiddleNameAss"

  /*<parameter:___forVerification />*/
</if>

<if parameter="___extraData">

 ,TO_CHAR("___birthday",'DD.MM.YYYY') AS "___birthday"
 ,"Л.Счет" AS "___clientAccount"
 ,'<sql limit="1">SELECT ( d.num || ' ' || d.series                                       ) AS "num"
FROM documents d
WHERE d.entity = 'persons' AND d.entityID = <var:___receivePersonId refColumn="persons.ID" />
  AND d.typeID IN ( 'ПАСПОРТ РОССИИ' ) AND 
      ( d.activeFrom <= SYSDATE  AND d.activeTo > SYSDATE  )
 
</sql>'
  AS "___passnum"

/*<parameter:___extraData />*/
</if>

<unless parameter="quickCalc">
,
    payReal."currentPayAmount" AS "currentPayAmount",
    payReal."pastPayAmount" AS "pastPayAmount",
    payReal."autoPayAmount" AS "autoPayAmount",
    payReal."indexationPayAmount" AS "indexationPayAmount",
    payReal."payAmount" AS "payAmount"
</unless>


/*<parameter:quickCalc />*/
FROM
(
SELECT
  p."___ownerID" AS "___ownerid",

    MAX(pay.ID) OVER (PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount ) AS payId,

  pay.ID AS "___payID",

  p.ID AS "___receivePersonId",
  pay.paymentBatchID AS "___pbid",
  pb.welfareGroup AS "Группа МСП",
  DECODE( pb.month, 1, 'январь' , 2 , 'февраль' , 3 , 'март' , 4 , 'апрель' , 5 , 'май' , 6 , 'июнь' , 
   7 , 'июль' , 8 , 'август' , 9 , 'сентябрь' , 10 , 'октябрь' , 11 , 'ноябрь' , 12 , 'декабрь' , 13 , 'январь'  ) AS "___month",
  
   ( '<!-' || '-' || TO_CHAR(
    LPAD(TO_CHAR(p.publicID),7,'0')
) || '-' || '->' || 
     '<a href="" onClick="javascript:window.open(''jsform?initFormScript=initPersonForm&entity=persons&_tcloneid_=<parameter:_tcloneid_ default=""/>&entityID=' || TO_CHAR(p.ID) || ''', ' || 
     ' ''popup' || NVL(TO_CHAR(p.ID),'') || ''', ''location=0,menubar=0,toolbar=0,status=1,scrollbars=1,resizable=1'' ' || 
     '); return false;">' || 
     
    LPAD(TO_CHAR(p.publicID),7,'0')
 || '</a>'                            )
 AS "Карточка",
<if expr="isDeduction==yes">
  <then>
 NVL(( NVL(pers.lastName,'' ) || ' ' || pers.firstName || CASE WHEN  pers.middleName IS NULL THEN  '' ELSE  ( ' ' || pers.middleName                                        ) END ),'<i>{{{Prefer not to say}}}</i>' ) AS "Назначенец",
     hosp.shortName AS "Стационар",
  </then>
  <else>
 NVL(( NVL(p.lastName,'' ) || ' ' || p.firstName || CASE WHEN  p.middleName IS NULL THEN  '' ELSE  ( ' ' || p.middleName                                        ) END ),'<i>{{{Prefer not to say}}}</i>' ) AS "personName",
  </else>
</if>
 DECODE( pb.paymentType, '01' , 
( 
( 
NVL(
  (SELECT
      ( k_tmp.name || ' ' || k_tmp.type || ', '                                      )
  FROM kladr k_tmp
  WHERE k_tmp.CODE = ( SUBSTR(k2.CODE,1 ,5 ) || '000000'                                        )
   AND k_tmp.klevel=2
       AND ROWNUM = 1 ),
  ''
) || 

( 
NVL(
  (SELECT
      ( k_tmp.type || ' ' || k_tmp.name || ', '                                      )
  FROM kladr k_tmp
  WHERE k_tmp.CODE = ( SUBSTR(k2.CODE,1 ,8 ) || '000'                                        )
  AND k_tmp.klevel=3
       AND ROWNUM = 1 ),
  ''
) || 
NVL(
  (SELECT
      ( k_tmp.type || ' ' || k_tmp.name || ', '                                      )
  FROM kladr k_tmp
  WHERE k_tmp.CODE = SUBSTR(k2.CODE,1 ,11 )
  AND k_tmp.klevel=4
       AND ROWNUM = 1 ),
  ''
) || 
NVL(( k2.type || ' ' || k2.name                                       ),'' ) || 
CASE 
  WHEN b2.buildingNo IS NULL THEN '' 
<if columnExists="buildings.letters">
  WHEN b2.wing IS NULL AND b2.letters IS NULL THEN ( ' д. ' || b2.buildingNo                                       )
  WHEN b2.wing IS NULL AND b2.letters IS NOT NULL THEN ( ' д. ' || b2.buildingNo || CASE WHEN
  b2.letters LIKE '1%' OR 
  b2.letters LIKE '2%' OR 
  b2.letters LIKE '3%' OR 
  b2.letters LIKE '4%' OR 
  b2.letters LIKE '5%' OR 
  b2.letters LIKE '6%' OR 
  b2.letters LIKE '7%' OR 
  b2.letters LIKE '8%' OR 
  b2.letters LIKE '9%' THEN ( '/' || b2.letters                                       ) ELSE b2.letters END
                                      )
  WHEN b2.wing IS NOT NULL AND b2.letters IS NULL THEN ( ' д. ' || b2.buildingNo || ' корп. ' || b2.wing                                     )
  WHEN b2.wing IS NOT NULL AND b2.letters IS NOT NULL THEN ( ' д. ' || b2.buildingNo || CASE WHEN
  b2.letters LIKE '1%' OR 
  b2.letters LIKE '2%' OR 
  b2.letters LIKE '3%' OR 
  b2.letters LIKE '4%' OR 
  b2.letters LIKE '5%' OR 
  b2.letters LIKE '6%' OR 
  b2.letters LIKE '7%' OR 
  b2.letters LIKE '8%' OR 
  b2.letters LIKE '9%' THEN ( '/' || b2.letters                                       ) ELSE b2.letters END
 || ' корп. ' || b2.wing                                    )
</if>
  WHEN b2.wing IS NOT NULL THEN ( ' д. ' || b2.buildingNo || ' корп. ' || b2.wing                                     )
  ELSE ( ' д. ' || b2.buildingNo                                       )
END

                                     )
 
                                       )
 || CASE
  WHEN pr2.letters IS NOT NULL AND pr2.apartmentNo = '0' THEN ( ' кв. ' || CASE WHEN
  pr2.letters LIKE '1%' OR 
  pr2.letters LIKE '2%' OR 
  pr2.letters LIKE '3%' OR 
  pr2.letters LIKE '4%' OR 
  pr2.letters LIKE '5%' OR 
  pr2.letters LIKE '6%' OR 
  pr2.letters LIKE '7%' OR 
  pr2.letters LIKE '8%' OR 
  pr2.letters LIKE '9%' THEN ( '/' || pr2.letters                                       ) ELSE pr2.letters END
                                       )
  WHEN pr2.apartmentNo = '0' THEN ''
  WHEN pr2.apartmentNo IS NULL THEN ''
<if columnExists="properties.letters">
  WHEN pr2.letters IS NOT NULL THEN ( ' кв. ' || pr2.apartmentNo || CASE WHEN
  pr2.letters LIKE '1%' OR 
  pr2.letters LIKE '2%' OR 
  pr2.letters LIKE '3%' OR 
  pr2.letters LIKE '4%' OR 
  pr2.letters LIKE '5%' OR 
  pr2.letters LIKE '6%' OR 
  pr2.letters LIKE '7%' OR 
  pr2.letters LIKE '8%' OR 
  pr2.letters LIKE '9%' THEN ( '/' || pr2.letters                                       ) ELSE pr2.letters END
                                      )
</if>
  ELSE ( ' кв. ' || pr2.apartmentNo                                       )
END
                                        )
 , 
( 
( 
NVL(
  (SELECT
      ( k_tmp.name || ' ' || k_tmp.type || ', '                                      )
  FROM kladr k_tmp
  WHERE k_tmp.CODE = ( SUBSTR(k.CODE,1 ,5 ) || '000000'                                        )
   AND k_tmp.klevel=2
       AND ROWNUM = 1 ),
  ''
) || 

( 
NVL(
  (SELECT
      ( k_tmp.type || ' ' || k_tmp.name || ', '                                      )
  FROM kladr k_tmp
  WHERE k_tmp.CODE = ( SUBSTR(k.CODE,1 ,8 ) || '000'                                        )
  AND k_tmp.klevel=3
       AND ROWNUM = 1 ),
  ''
) || 
NVL(
  (SELECT
      ( k_tmp.type || ' ' || k_tmp.name || ', '                                      )
  FROM kladr k_tmp
  WHERE k_tmp.CODE = SUBSTR(k.CODE,1 ,11 )
  AND k_tmp.klevel=4
       AND ROWNUM = 1 ),
  ''
) || 
NVL(( k.type || ' ' || k.name                                       ),'' ) || 
CASE 
  WHEN b.buildingNo IS NULL THEN '' 
<if columnExists="buildings.letters">
  WHEN b.wing IS NULL AND b.letters IS NULL THEN ( ' д. ' || b.buildingNo                                       )
  WHEN b.wing IS NULL AND b.letters IS NOT NULL THEN ( ' д. ' || b.buildingNo || CASE WHEN
  b.letters LIKE '1%' OR 
  b.letters LIKE '2%' OR 
  b.letters LIKE '3%' OR 
  b.letters LIKE '4%' OR 
  b.letters LIKE '5%' OR 
  b.letters LIKE '6%' OR 
  b.letters LIKE '7%' OR 
  b.letters LIKE '8%' OR 
  b.letters LIKE '9%' THEN ( '/' || b.letters                                       ) ELSE b.letters END
                                      )
  WHEN b.wing IS NOT NULL AND b.letters IS NULL THEN ( ' д. ' || b.buildingNo || ' корп. ' || b.wing                                     )
  WHEN b.wing IS NOT NULL AND b.letters IS NOT NULL THEN ( ' д. ' || b.buildingNo || CASE WHEN
  b.letters LIKE '1%' OR 
  b.letters LIKE '2%' OR 
  b.letters LIKE '3%' OR 
  b.letters LIKE '4%' OR 
  b.letters LIKE '5%' OR 
  b.letters LIKE '6%' OR 
  b.letters LIKE '7%' OR 
  b.letters LIKE '8%' OR 
  b.letters LIKE '9%' THEN ( '/' || b.letters                                       ) ELSE b.letters END
 || ' корп. ' || b.wing                                    )
</if>
  WHEN b.wing IS NOT NULL THEN ( ' д. ' || b.buildingNo || ' корп. ' || b.wing                                     )
  ELSE ( ' д. ' || b.buildingNo                                       )
END

                                     )
 
                                       )
 || CASE
  WHEN pr .letters IS NOT NULL AND pr .apartmentNo = '0' THEN ( ' кв. ' || CASE WHEN
  pr .letters LIKE '1%' OR 
  pr .letters LIKE '2%' OR 
  pr .letters LIKE '3%' OR 
  pr .letters LIKE '4%' OR 
  pr .letters LIKE '5%' OR 
  pr .letters LIKE '6%' OR 
  pr .letters LIKE '7%' OR 
  pr .letters LIKE '8%' OR 
  pr .letters LIKE '9%' THEN ( '/' || pr .letters                                       ) ELSE pr .letters END
                                       )
  WHEN pr .apartmentNo = '0' THEN ''
  WHEN pr .apartmentNo IS NULL THEN ''
<if columnExists="properties.letters">
  WHEN pr .letters IS NOT NULL THEN ( ' кв. ' || pr .apartmentNo || CASE WHEN
  pr .letters LIKE '1%' OR 
  pr .letters LIKE '2%' OR 
  pr .letters LIKE '3%' OR 
  pr .letters LIKE '4%' OR 
  pr .letters LIKE '5%' OR 
  pr .letters LIKE '6%' OR 
  pr .letters LIKE '7%' OR 
  pr .letters LIKE '8%' OR 
  pr .letters LIKE '9%' THEN ( '/' || pr .letters                                       ) ELSE pr .letters END
                                      )
</if>
  ELSE ( ' кв. ' || pr .apartmentNo                                       )
END
                                        )
 ) AS "Адрес",
    '<quick visible="true" />;<blankNulls value="-"/>' AS ";Адрес",

<if parameter="___extraData">
  p.birthDay AS "___birthday",
</if>

<if parameter="___forVerification">
  p.birthDay AS "___birthday",
  p."___searchLastName" AS "___searchLastName",
  p."___searchFirstName" AS "___searchFirstName",
  p."___searchMiddleName" AS "___searchMiddleName",

  pass.birthDay AS "___birthdayAss",
  pass."___searchLastName" AS "___searchLastNameAss",
  pass."___searchFirstName" AS "___searchFirstNameAss",
  pass."___searchMiddleName" AS "___searchMiddleNameAss",
</if>

  a.caseNo AS "caseNo",
  a.orderNo AS "orderNo",
  p.publicID AS "publicID",
  wt.CODE AS "___welfareType",
  NVL(pbo.ID,'0') AS "___pboId",
  NVL(pd.bankAccount,'0') AS "___bankAccount",
  CASE WHEN pb.paymentType = '01'
     THEN '<link queryName="DetailedPayments" table="payments" using="___pbid,___month,___receivePersonId,___pboId,___bankAccount,___caseNo,___orderNo" columns="paymentBatchId,month,receivePersonId,pboId,bankAccount,caseNo,orderNo" />'
     ELSE '<link queryName="DetailedPayments" table="payments" using="___pbid,___month,___receivePersonId,___pboId,___bankAccount,___caseNo" columns="paymentBatchId,month,receivePersonId,pboId,bankAccount,caseNo" />'
  END AS ";Получатель",

  wd.postalCode AS "post",
  wd.postalCode AS "Отделение",
        ( '<quick visible="' || DECODE( pd.paymentType, '02', 'false' , '04' , 'false' , 'true'                       ) || '" />;<blankNulls value="-"/>'                                      ) AS ";Отделение",
  wd.dost AS "Участок",
        ( '<quick visible="' || DECODE( pd.paymentType, '02', 'false' , '04' , 'false' , 'true'                       ) || '" />;<blankNulls value="-"/>'                                      )  AS ";Участок",
  wd.deliveryDate AS "Дата",
        ( ';<quick visible="' || DECODE( pd.paymentType, '02', 'false' , '04' , 'false' , 'true'                       ) || '" />;<blankNulls value="-"/>'                                      )  AS ";Дата",

  pbo.name AS "Банк",
        ( '<quick visible="' || DECODE( pd.paymentType, '02', 'true' , 'false'                         ) || '" />;<blankNulls value="-"/>'                                      ) AS ";Банк",
  comp.name AS "Контрагент",
        ( '<quick visible="' || DECODE( pd.paymentType, '04', 'true' , 'false'                         ) || '" />;<blankNulls value="-"/>'                                      ) AS ";Контрагент",
  pd.bankAccount AS "Р.Счет",
        ( '<quick visible="' || DECODE( pd.paymentType, '02', 'true' , '04' , 'true' , 'false'                       ) || '" />;<blankNulls value="-"/>'                                      ) AS ";Р.Счет",
  pd.clientAccount AS "Л.Счет",
          ( '<quick visible="' || DECODE( pd.paymentType, '04', 'true' , 'false'                         ) || '" />;<blankNulls value="-"/>'                                      ) AS ";Л.Счет",

<unless parameter="quickCalc">
    SUM(
        CASE WHEN pay.eventType IN ('14','26')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "currentPayAmount",

    SUM(
        CASE WHEN pay.eventType IN ('15')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "pastPayAmount",

    SUM(
        CASE WHEN pay.eventType IN ('17','68','25')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "autoPayAmount",

    SUM(
        CASE WHEN pay.eventType IN ('16')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "indexationPayAmount",

    SUM( CASE
         WHEN pay.eventType IN('18','20','67','83','84','85','88','89','116') THEN +pay.payAmountCredit
         WHEN pay.eventType IN('19','66','19','20','66','67','80','81','82','86','87','115') THEN -pay.payAmountDebit
         WHEN pay.eventType IN('21','90','91','92','93','94') THEN -pay.payAmountCredit
         ELSE 0
        END
    ) OVER (PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount)
    AS  "payAmount",
</unless>
/*<parameter:quickCalc />*/

    ROW_NUMBER() OVER(
        PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,
            CASE WHEN pbo.ID = '0' THEN NULL ELSE pbo.ID END,
            CASE WHEN pd.bankAccount = '0' THEN NULL ELSE pd.bankAccount END
        ORDER BY
            CASE WHEN pay.eventType IN ('14','15','16','17','25','26','68' , '24')
            THEN 0
            ELSE 1
            END,
            pay.ID DESC,
         CASE WHEN oreg.occupancyType = <addressTypes:CODE name="Registration" /> THEN 0 ELSE 1 END
    ) AS "___rn",

    pay.eventType AS "___eventType"

FROM payments pay
  INNER JOIN paymentBatches pb ON pay.paymentBatchID = pb.ID
  INNER JOIN assignments a ON a.ID = pay.assignmentID
  INNER JOIN assignmentRules ar ON a.assignmentRuleID = ar.ID
  INNER JOIN welfareTypes wt  ON  pb.welfaregroup = wt.targetWelfareGroupCode AND wt.CODE = ar.welfareType
  INNER JOIN persons p ON a.receivePersonID = p.ID
<if parameter="___forVerification">
  INNER JOIN persons pass ON a.personID = pass.ID
</if>
  INNER JOIN paymentDetails pd ON pd.ID = a.paymentDetailID
<if expr="isDeduction==yes">
  <then>
     INNER JOIN persons pers ON pers.ID = a.personID
     INNER JOIN companies hosp ON hosp."___ownerID" = pd.ownerID
  </then>
</if>
  LEFT JOIN companies comp ON comp.ID = pd.kontrAgentID
  LEFT JOIN occupancies o ON o.ID = pd.occupancyID
  LEFT JOIN occupancies oreg ON oreg.ownerID = p."___ownerID"
        AND oreg.occupancyType = <addressTypes:CODE name="Registration" />
        AND 
      ( oreg.activeFrom <= pb.formDate  AND oreg.activeTo > pb.formDate  )

  LEFT JOIN properties pr ON pr.ID = oreg.propertyID
  LEFT JOIN buildings b ON b.ID = pr.buildingID
  LEFT JOIN kladr k ON k.CODE = b.kladrStreetCode

  LEFT JOIN properties pr2 ON pr2.ID = o.propertyID
  LEFT JOIN buildings b2 ON b2.ID = pr2.buildingID
  LEFT JOIN kladr k2 ON k2.CODE = b2.kladrStreetCode

  LEFT JOIN welfareDelivery wd ON pr2.welfareDeliveryID = wd.ID
  LEFT JOIN paymentBankOffices pbo ON  pbo.ID = pd.bankID
  <if parameter="mainBankCompanyID">
     LEFT JOIN companies banks ON banks.ID = pbo.companyID
  </if>

  LEFT JOIN kladr kladr ON kladr.CODE=wd.kladrcode

  WHERE pb.ID = <parameter:paymentBatchId refColumn="paymentBatches.ID" />

<if parameter="bankCompanyID">
    AND pbo.companyID = <parameter:bankCompanyID refColumn="company.ID"/>
</if>
<if parameter="bankID">
    AND pbo.ID = <parameter:bankID refColumn="paymentBankOffices.ID" />
</if>
  <if parameter="mainBankCompanyID">
        AND ( banks.ID = <parameter:mainBankCompanyID refColumn="company.ID"/> OR banks.mainCompanyID = <parameter:mainBankCompanyID refColumn="company.ID"/>)
  </if>
) payReal
WHERE payReal."___rn" = 1
AND payReal."___eventType" IN ('14','15','16','17','25','26','68' , '24')

<if parameter="lastName">
    AND payReal."___searchLastName" LIKE '<parameter:lastName regex="[ёЁ]" replacement="Е" changeCase="upper" />%'
</if>
<if parameter="firstName">
    AND payReal."___searchFirstName" LIKE '<parameter:firstName regex="[ёЁ]" replacement="Е" changeCase="upper" />%'
</if>
<if parameter="middleName">
    AND payReal."___searchMiddleName" LIKE '<parameter:middleName regex="[ёЁ]" replacement="Е" changeCase="upper" />%'
</if>
<if parameter="caseNo">
    AND payReal."caseNo" = '<parameter:caseNo/>'
</if>
<if parameter="orderNo">
    AND payReal."orderNo" = '<parameter:orderNo/>'
</if>
<if parameter="publicID">
    AND payReal."publicID" = <parameter:publicID refColumn="persons.publicID"/>
</if>
<if parameter="welfareType">
    AND payReal."___welfareType" = '<parameter:welfareType/>'
</if>
<if parameter="post">
    AND payReal."post" = '<parameter:post/>'
</if>
<if parameter="postName">
    AND payReal."postName" = '<parameter:postName/>'
</if>
ORDER BY "___ID"]]></sql>

 <m4><![CDATA[
SELECT
  "___payID" AS "___ID",
  "___ownerid",
  "___pbid",
  "___receivePersonId",
  "Группа МСП",
  "caseNo" AS "Номер дела",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер дела",
  "caseNo" AS "___caseNo",
  "orderNo" AS "Номер поручения",
  '<blankNulls/>;<quick visible="false" />' AS ";Номер поручения",
  "orderNo" AS "___orderNo",
  "___month",
  "___pboId",
  "___bankAccount",
  "Карточка",
/*<parameter:isDeduction/>*/
<if expr="isDeduction==yes">
  <then>
     "Назначенец",
     "Стационар",
  </then>
  <else>
    "personName" AS "Получатель", ";Получатель",
  </else>
</if>

  "Адрес", ";Адрес", 
ifelse(m4_REGION,00,[
    "Наименование отд",";Наименование отд",
],[
  "Отделение", ";Отделение",
  "Участок", ";Участок",
  "Дата", ";Дата",
])
  "Банк", ";Банк",
  "Р.Счет", ";Р.Счет"

<if parameter="___forVerification">

  ,"___birthday" AS "___birthday"
  ,"___searchLastName" AS "___searchLastName"
  ,"___searchFirstName" AS "___searchFirstName"
  ,"___searchMiddleName" AS "___searchMiddleName"

  ,"___birthdayAss" AS "___birthdayAss"
  ,"___searchLastNameAss" AS "___searchLastNameAss"
  ,"___searchFirstNameAss" AS "___searchFirstNameAss"
  ,"___searchMiddleNameAss" AS "___searchMiddleNameAss"

  /*<parameter:___forVerification />*/
</if>

<if parameter="___extraData">

 ,_DBMS_DATE_FORMAT_RU("___birthday") AS "___birthday"
 ,"Л.Счет" AS "___clientAccount"
 ,'<sql limit="1">SELECT _DBMS_CONCAT( d.num, ' ', d.series ) AS "num"
FROM documents d
WHERE d.entity = 'persons' AND d.entityID = <var:___receivePersonId refColumn="persons.ID" />
  AND d.typeID IN ( 'ПАСПОРТ РОССИИ' ) AND IS_ACTIVE_NOT_NULL(d,_DBMS_CURRENT_DATE) 
</sql>'
  AS "___passnum"

/*<parameter:___extraData />*/
</if>

<unless parameter="quickCalc">
,
    payReal."currentPayAmount" AS "currentPayAmount",
    payReal."pastPayAmount" AS "pastPayAmount",
    payReal."autoPayAmount" AS "autoPayAmount",
    payReal."indexationPayAmount" AS "indexationPayAmount",
    payReal."payAmount" AS "payAmount"
</unless>
ifelse(m4_REGION,00,[
  ,"Период назначения"
])

/*<parameter:quickCalc />*/
FROM
(
SELECT
  p._quote(___ownerID) AS "___ownerid",

    MAX(pay.ID) OVER (PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount ) AS payId,

  pay.ID AS "___payID",
ifelse(m4_REGION,00,[
    MONTH_RU( EXTRACT ( MONTH FROM pay.paymentActiveFrom ) ) AS "Период назначения",
])
  p.ID AS "___receivePersonId",
  pay.paymentBatchID AS "___pbid",
  pb.welfareGroup AS "Группа МСП",
  MONTH_RU(pb.month) AS "___month",
  CARD_LINK_COMMON([jsform?initFormScript=initPersonForm&entity=persons],p,PUBLIC_ID(p)) AS "Карточка",
<if expr="isDeduction==yes">
  <then>
     PERSON_NAME(pers) AS "Назначенец",
     hosp.shortName AS "Стационар",
  </then>
  <else>
        PERSON_NAME(p) AS "personName",
  </else>
</if>
 _DBMS_CASE_WHEN( pb.paymentType, '01' , FULL_PROPERTY_ADDRESS_WITHOUT_REGION( k2, b2, pr2), FULL_PROPERTY_ADDRESS_WITHOUT_REGION( k, b, pr ) ) AS "Адрес",
    '<quick visible="true" />;<blankNulls value="-"/>' AS ";Адрес",

<if parameter="___extraData">
  p.birthDay AS "___birthday",
</if>

<if parameter="___forVerification">
  p.birthDay AS "___birthday",
  p._quote(___searchLastName) AS "___searchLastName",
  p._quote(___searchFirstName) AS "___searchFirstName",
  p._quote(___searchMiddleName) AS "___searchMiddleName",

  pass.birthDay AS "___birthdayAss",
  pass._quote(___searchLastName) AS "___searchLastNameAss",
  pass._quote(___searchFirstName) AS "___searchFirstNameAss",
  pass._quote(___searchMiddleName) AS "___searchMiddleNameAss",
</if>

  a.caseNo AS "caseNo",
  a.orderNo AS "orderNo",
  p.publicID AS "publicID",
  wt.CODE AS "___welfareType",
  _DBMS_COALESCE(pbo.ID,'0') AS "___pboId",
  _DBMS_COALESCE(pd.bankAccount,'0') AS "___bankAccount",
  CASE WHEN pb.paymentType = '01'
     THEN '<link queryName="DetailedPayments" table="payments" using="___pbid,___month,___receivePersonId,___pboId,___bankAccount,___caseNo,___orderNo" columns="paymentBatchId,month,receivePersonId,pboId,bankAccount,caseNo,orderNo" />'
     ELSE '<link queryName="DetailedPayments" table="payments" using="___pbid,___month,___receivePersonId,___pboId,___bankAccount,___caseNo" columns="paymentBatchId,month,receivePersonId,pboId,bankAccount,caseNo" />'
  END AS ";Получатель",

  wd.postalCode AS "post",
  wd.postalCode AS "Отделение",
        _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'02','false','04','false','true'),'" />;<blankNulls value="-"/>') AS ";Отделение",
  wd.dost AS "Участок",
        _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'02','false','04','false','true'),'" />;<blankNulls value="-"/>')  AS ";Участок",
  wd.deliveryDate AS "Дата",
        _DBMS_CONCAT(';<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'02','false','04','false','true'),'" />;<blankNulls value="-"/>')  AS ";Дата",
ifelse(m4_REGION,00,[
  wd.postName AS "Наименование отд",
  _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'02','false','04','false','true'),'" />;<blankNulls value="-"/>')  AS ";Наименование отд",
  wd.postName AS "postName",
])
  pbo.name AS "Банк",
        _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'02','true','false'),'" />;<blankNulls value="-"/>') AS ";Банк",
  comp.name AS "Контрагент",
        _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'04','true','false'),'" />;<blankNulls value="-"/>') AS ";Контрагент",
  pd.bankAccount AS "Р.Счет",
        _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'02','true','04','true','false'),'" />;<blankNulls value="-"/>') AS ";Р.Счет",
  pd.clientAccount AS "Л.Счет",
          _DBMS_CONCAT('<quick visible="',_DBMS_CASE_WHEN(pd.paymentType,'04','true','false'),'" />;<blankNulls value="-"/>') AS ";Л.Счет",

<unless parameter="quickCalc">
    SUM(
        CASE WHEN pay.eventType IN ('14','26')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "currentPayAmount",

    SUM(
        CASE WHEN pay.eventType IN ('15')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "pastPayAmount",

    SUM(
        CASE WHEN pay.eventType IN ('17','68','25')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "autoPayAmount",

    SUM(
        CASE WHEN pay.eventType IN ('16')
        THEN pay.payAmountDebit
        ELSE 0 END
    ) OVER( PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount )
    AS  "indexationPayAmount",

    SUM( CASE
         WHEN pay.eventType IN('18','20','67','83','84','85','88','89','116') THEN +pay.payAmountCredit
         WHEN pay.eventType IN('19','66','19','20','66','67','80','81','82','86','87','115') THEN -pay.payAmountDebit
         WHEN pay.eventType IN('21','90','91','92','93','94') THEN -pay.payAmountCredit
         ELSE 0
        END
    ) OVER (PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,pbo.ID,pd.bankAccount)
    AS  "payAmount",
</unless>
/*<parameter:quickCalc />*/

    ROW_NUMBER() OVER(
        PARTITION BY a.caseNo, a.orderNo, p.ID, pb.ID, wd.ID,
            CASE WHEN pbo.ID = '0' THEN NULL ELSE pbo.ID END,
            CASE WHEN pd.bankAccount = '0' THEN NULL ELSE pd.bankAccount END
        ORDER BY
            CASE WHEN pay.eventType IN (PAYABLE_DEBET_EVENTS, '24')
            THEN 0
            ELSE 1
            END,
            pay.ID DESC,
         CASE WHEN oreg.occupancyType = <addressTypes:CODE name="Registration" /> THEN 0 ELSE 1 END
    ) AS "___rn",

    pay.eventType AS "___eventType"

FROM payments pay
  INNER JOIN paymentBatches pb ON pay.paymentBatchID = pb.ID
  INNER JOIN assignments a ON a.ID = pay.assignmentID
  INNER JOIN assignmentRules ar ON a.assignmentRuleID = ar.ID
  INNER JOIN welfareTypes wt  ON  pb.welfaregroup = wt.targetWelfareGroupCode AND wt.CODE = ar.welfareType
  INNER JOIN persons p ON a.receivePersonID = p.ID
<if parameter="___forVerification">
  INNER JOIN persons pass ON a.personID = pass.ID
</if>
  INNER JOIN paymentDetails pd ON pd.ID = a.paymentDetailID
<if expr="isDeduction==yes">
  <then>
     INNER JOIN persons pers ON pers.ID = a.personID
     INNER JOIN companies hosp ON hosp._quote(___ownerID) = pd.ownerID
  </then>
</if>
  LEFT JOIN companies comp ON comp.ID = pd.kontrAgentID
  LEFT JOIN occupancies o ON o.ID = pd.occupancyID
  LEFT JOIN occupancies oreg ON oreg.ownerID = p._quote(___ownerID)
        AND oreg.occupancyType = <addressTypes:CODE name="Registration" />
        AND IS_ACTIVE_NOT_NULL(oreg,pb.formDate)
  LEFT JOIN properties pr ON pr.ID = oreg.propertyID
  LEFT JOIN buildings b ON b.ID = pr.buildingID
  LEFT JOIN kladr k ON k.CODE = b.kladrStreetCode

  LEFT JOIN properties pr2 ON pr2.ID = o.propertyID
  LEFT JOIN buildings b2 ON b2.ID = pr2.buildingID
  LEFT JOIN kladr k2 ON k2.CODE = b2.kladrStreetCode

  LEFT JOIN welfareDelivery wd ON pr2.welfareDeliveryID = wd.ID
  LEFT JOIN paymentBankOffices pbo ON  pbo.ID = pd.bankID
  <if parameter="mainBankCompanyID">
     LEFT JOIN companies banks ON banks.ID = pbo.companyID
  </if>

  LEFT JOIN kladr kladr ON kladr.CODE=wd.kladrcode

  WHERE pb.ID = <parameter:paymentBatchId refColumn="paymentBatches.ID" />

<if parameter="bankCompanyID">
    AND pbo.companyID = <parameter:bankCompanyID refColumn="company.ID"/>
</if>
<if parameter="bankID">
    AND pbo.ID = <parameter:bankID refColumn="paymentBankOffices.ID" />
</if>
  <if parameter="mainBankCompanyID">
        AND ( banks.ID = <parameter:mainBankCompanyID refColumn="company.ID"/> OR banks.mainCompanyID = <parameter:mainBankCompanyID refColumn="company.ID"/>)
  </if>
) payReal
WHERE payReal."___rn" = 1
AND payReal."___eventType" IN (PAYABLE_DEBET_EVENTS, '24')

<if parameter="lastName">
    AND payReal._quote(___searchLastName) LIKE '<parameter:lastName regex="[[ёЁ]]" replacement="Е" changeCase="upper" />%'
</if>
<if parameter="firstName">
    AND payReal._quote(___searchFirstName) LIKE '<parameter:firstName regex="[[ёЁ]]" replacement="Е" changeCase="upper" />%'
</if>
<if parameter="middleName">
    AND payReal._quote(___searchMiddleName) LIKE '<parameter:middleName regex="[[ёЁ]]" replacement="Е" changeCase="upper" />%'
</if>
<if parameter="caseNo">
    AND payReal."caseNo" = '<parameter:caseNo/>'
</if>
<if parameter="orderNo">
    AND payReal."orderNo" = '<parameter:orderNo/>'
</if>
<if parameter="publicID">
    AND payReal."publicID" = <parameter:publicID refColumn="persons.publicID"/>
</if>
<if parameter="welfareType">
    AND payReal."___welfareType" = '<parameter:welfareType/>'
</if>
<if parameter="post">
    AND payReal."post" = '<parameter:post/>'
</if>
<if parameter="postName">
    AND payReal."postName" = '<parameter:postName/>'
</if>
ORDER BY "___ID"]]></m4>


</testSuite>
