categories:
  type: dictionary
  displayName: Categories
  primaryKey: ID
  scheme:
    columns:
    - ID:
        type: KEYTYPE
        autoIncrement: true
        primaryKey: true
    - entity:
        type: VARCHAR(30)
    - publicID:
        type: VARCHAR(100)
        canBeNull: true
    - name:
        type: VARCHAR(1000)
    - parentID:
        type: KEYTYPE
        canBeNull: true
        reference: categories
    - description:
        type: TEXT
        canBeNull: true
    indices:
    - IDX_CAT_ENTITY_PAR:
        columns:
        - entity
        - parentID
    - IDX_CAT_ENTITY_PUB:
        columns:
        - entity
        - publicID
    - IDX_CAT_NAME_PAR:
        columns:
        - name
        - parentID
    - IDX_CAT_PARENT_ID:
        columns: parentID
    - IDX_CAT_PUBLICID:
        columns: publicID
  queries:
  - '*** Selection view ***':
      type: 1D
      roles: Administrator
      code: |-
        SELECT
            c1.ID AS "Code",
            CONCAT(c1.entity ,': ' ,
                COALESCE( CONCAT( c8.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c7.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c6.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c5.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c4.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c3.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c2.name ,'->' ),'' ) ,
                c1.name
            ) AS "Category"
        FROM categories c1
            LEFT JOIN categories c2 on c1.parentID = c2.ID
            LEFT JOIN categories c3 on c2.parentID = c3.ID
            LEFT JOIN categories c4 on c3.parentID = c4.ID
            LEFT JOIN categories c5 on c4.parentID = c5.ID
            LEFT JOIN categories c6 on c5.parentID = c6.ID
            LEFT JOIN categories c7 on c6.parentID = c7.ID
            LEFT JOIN categories c8 on c7.parentID = c8.ID
        WHERE (1=1)
        <if parameter="rootPublicID">
            AND '<parameter:rootPublicID />' IN ( c1.publicID, c2.publicID, c3.publicID, c4.publicID, c5.publicID, c6.publicID, c7.publicID, c8.publicID )
        </if>
        ORDER BY CONCAT(
            COALESCE( CONCAT( c8.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c7.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c6.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c5.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c4.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c3.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c2.name ,'->' ),'' ) ,
            c1.name )
  - Selection view for entity:
      type: 1D
      roles: Administrator
      code: |-
        SELECT
            c1.ID AS "Code",
            CONCAT(
                COALESCE( CONCAT( c8.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c7.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c6.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c5.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c4.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c3.name ,'->' ),'' ) ,
                COALESCE( CONCAT( c2.name ,'->' ),'' ) ,
                c1.name
            ) AS "Category"
        FROM categories c1
            LEFT JOIN categories c2 on c1.parentID = c2.ID
            LEFT JOIN categories c3 on c2.parentID = c3.ID
            LEFT JOIN categories c4 on c3.parentID = c4.ID
            LEFT JOIN categories c5 on c4.parentID = c5.ID
            LEFT JOIN categories c6 on c5.parentID = c6.ID
            LEFT JOIN categories c7 on c6.parentID = c7.ID
            LEFT JOIN categories c8 on c7.parentID = c8.ID
        WHERE c1.entity = '<parameter:entity />'
        <if parameter="rootPublicID">
            AND '<parameter:rootPublicID />' IN ( c1.publicID, c2.publicID, c3.publicID, c4.publicID, c5.publicID, c6.publicID, c7.publicID, c8.publicID )
        </if>
        ORDER BY CONCAT(
            COALESCE( CONCAT( c8.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c7.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c6.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c5.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c4.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c3.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c2.name ,'->' ),'' ) ,
            c1.name )
  - All records:
      type: 1D
      roles: Administrator
      operations:
      - Delete
      - Edit
      - Filter
      - Insert
      code: |-
        SELECT
           c1.ID AS "___ID",
           c1.entity AS "Entity",
           CONCAT(
               COALESCE( CONCAT( c8.name ,'->' ),'' ) ,
               COALESCE( CONCAT( c7.name ,'->' ),'' ) ,
               COALESCE( CONCAT( c6.name ,'->' ),'' ) ,
               COALESCE( CONCAT( c5.name ,'->' ),'' ) ,
               COALESCE( CONCAT( c4.name ,'->' ),'' ) ,
               COALESCE( CONCAT( c3.name ,'->' ),'' ) ,
               COALESCE( CONCAT( c2.name ,'->' ),'' ) ,
               c1.name
           ) AS "Category",
           c1.publicID,
           c1.description AS "Comment"
        FROM categories c1
            LEFT JOIN categories c2 on c1.parentID = c2.ID
            LEFT JOIN categories c3 on c2.parentID = c3.ID
            LEFT JOIN categories c4 on c3.parentID = c4.ID
            LEFT JOIN categories c5 on c4.parentID = c5.ID
            LEFT JOIN categories c6 on c5.parentID = c6.ID
            LEFT JOIN categories c7 on c6.parentID = c7.ID
            LEFT JOIN categories c8 on c7.parentID = c8.ID
        WHERE (1=1)
        <if parameter="rootPublicID">
            AND '<parameter:rootPublicID />' IN ( c1.publicID, c2.publicID, c3.publicID, c4.publicID, c5.publicID, c6.publicID, c7.publicID, c8.publicID )
        </if>
        ORDER BY CONCAT(
            COALESCE( CONCAT( c8.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c7.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c6.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c5.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c4.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c3.name ,'->' ),'' ) ,
            COALESCE( CONCAT( c2.name ,'->' ),'' ) ,
            c1.name )
  operations:
  - Insert:
      type: Groovy
      roles: Administrator
      file: categories/Insert.groovy
  - Delete:
      records: 2
      roles: Administrator
      code: com.developmentontheedge.be5.operations.SilentDeleteOperation
  - Edit:
      records: 1
      roles: Administrator
      code: com.developmentontheedge.be5.operations.SilentEditOperation
  - Filter:
      roles: Administrator
      layout: '{"type":"modalForm"}'
      code: com.developmentontheedge.be5.operations.FilterOperation