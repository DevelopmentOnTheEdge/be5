users:
  type: table
  primaryKey: user_name
  order: '80'
  scheme:
    columns:
    - user_name:
        type: VARCHAR(100)
        primaryKey: true
    - user_pass:
        type: VARCHAR(50)
        canBeNull: true
  queries:
  - '*** Selection view ***':
      code: |-
        SELECT
            u.user_name AS "Code", u.user_name AS "Name" FROM users u
            <if parameter="selector">
                WHERE u.user_name LIKE '<parameter:selector/>%'
            </if>
        ORDER BY 1
  - All records:
      type: 1D
      roles: Administrator
      operations:
      - Delete
      - Edit
      - Insert
      code: |-
        SELECT
          u.user_name AS "___ID",
          u.user_name AS "User"
        FROM users u
  - Login:
      type: static
      roles: Guest
      value: login
  operations:
  - Delete:
      records: 2
      roles: Administrator
      code: com.developmentontheedge.be5.operations.DeleteOperation
  - Edit:
      records: 2
      roles: Administrator
      code: com.developmentontheedge.be5.operations.EditOperation
  - Insert:
      roles: Administrator
      code: com.developmentontheedge.be5.operations.InsertOperation
  - Login:
      roles: Guest
      type: Groovy
      file: users/Login.groovy
  - Logout:
      roles: '@AllRolesExceptGuest'
      type: Groovy
      file: users/Logout.groovy
