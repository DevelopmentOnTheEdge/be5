testtable:
  type: table
  displayName: testtable
  order: '9'
  besql: true
  primaryKey: ID
  scheme:
    columns:
    - ID:
        type: KEYTYPE
        autoIncrement: true
        primaryKey: true
    - name:
        type: VARCHAR(20)
    - valueCol:
        type: KEYTYPE
  queries:
  - All records:
      type: 1D_unknown
      roles: '@AllRoles'
      code: |-
        SELECT
          t.name AS "Name",
          t.valueCol AS "Value"
        FROM testtable t
  - testOrderWithHiddenColumns:
      code: |-
        SELECT
          t.ID AS "___ID",
          t.ID AS "___testID",
          t.name AS "Name",
          t.valueCol AS "Value"
        FROM testtable t
  - emptyQuery:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT * FROM testtable t WHERE 1 = 2
  - beLink:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name",
          '<link columns="entity,ID" using="users,___ID" table="testtable" queryName="Test 1D unknown"/>' AS ";Name"
        FROM testtable t
  - beLinkCustomUrl:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          CONCAT('testCard/', CAST(123 AS CHAR)) AS "___TestUrl",
          t.name AS "Name;<link url='___TestUrl' class='open-hash-url'/>"
        FROM testtable t
  - beLinkMultiple:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name",
          '<link columns="ID,ID" using="1,2" table="testtable" queryName="Test 1D unknown"/>' AS ";Name"
        FROM testtable t
  - beRef:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name",
          '<ref table="testtable" />' AS ";Name"
        FROM testtable t
  - beQuick:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name",
          '<quick visible="true"/>' AS ";Name"
        FROM testtable t
  - beCssFormat:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.valueCol AS "Value",
          '<css class="currency"/>;<format mask="###,###,##0.00" />' AS ";Value"
        FROM testtable t
  - safeXml:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          t.name AS "Name;<safexml/>"
        FROM testtable t
  - beGrouping:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name;<grouping/>"
        FROM testtable t
  - beRoles:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name",
          t.valueCol AS "Value;<roles name='TestUser2'/>"
        FROM testtable t
  - beRolesNot:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          t.name AS "Name",
          t.valueCol AS "Value;<roles name='!TestUser2'/>"
        FROM testtable t
  - beRowCssClass:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          'test' AS "test",
          t.valueCol AS "value",
          t.name AS "___css_class"
        FROM testtable t
  - beAggregate:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          t.valueCol AS "Value",
          '<aggregate function="SUM" type="Number" format="###,###,##0.00" cssClass="currency"/>' AS ";Value"
        FROM testtable t
  - beAggregate1D:
      type: 1D
      roles: SystemDeveloper
      code: |-
        SELECT
          123 as "___ID",
          'test' AS "Test",
          'test2' AS "Test2",
          t.valueCol AS "Value",
          '<aggregate function="SUM" type="Number" format="###,###,##0.00" cssClass="currency"/>' AS ";Value"
        FROM testtable t
  - Sub Query:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          t.name AS "___Name",
          t.name AS "Name",
          t.valueCol AS "Value",
          '<sql>SELECT u.valueCol FROM testSubQuery u
                WHERE u.name = '<var:___Name />'</sql>' AS "testSubQueryValues",
          '<sql>SELECT concat(u.valueCol,null) FROM testSubQuery u
                WHERE u.name = '<var:___Name />'</sql>' AS "testSubQueryValues1"
        FROM testtable t
  - subQueryBeautifier:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          '<sql beautifierName="internal_glue">SELECT u.name, u.valueCol FROM testSubQuery u</sql>' AS "test"
        FROM testtable t
  - subQueryBeautifierLine:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          '<sql beautifierName="line">SELECT u.name, u.valueCol FROM testSubQuery u</sql>' AS "test"
        FROM testtable t
  - subQueryBeautifierText:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          '<sql beautifierName="text">SELECT u.name, u.valueCol FROM testSubQuery u</sql>' AS "test"
        FROM testtable t
  - Sub Query default:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          t.name AS "___Name",
          '<sql default="defaultValue">SELECT u.valueCol
                FROM testSubQuery u WHERE 1 = 2</sql>' AS "testSubQueryValues"
        FROM testtable t
  - Sub Query with prepare params:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          t.name AS "___Name",
          t.name AS "Name",
          t.valueCol AS "Value",
          '<sql using="___Name">SELECT u.valueCol FROM testSubQuery u WHERE u.name = ?</sql>' AS "testtUserValues"
        FROM testtable t
  - Sub Query with long prepare params:
      type: 1D_unknown
      roles: SystemDeveloper
      code: |-
        SELECT
          t.valueCol AS "___value",
          t.name AS "Name",
          t.valueCol AS "Value",
          '<sql using="___value">SELECT u.valueCol FROM testSubQuery u WHERE u.valueCol = ?</sql>' AS "testtUserValues"
        FROM testtable t
  - TestMultipleColumn:
      code: |-
        SELECT ID AS "___ID", name FROM testtable WHERE 1=1
          AND name IN <parameter:name multiple="true" refColumn="testtable.name" />
  - TestMultipleColumnLong:
      code: |-
        SELECT ID AS "___ID", name FROM testtable WHERE 1=1
          AND ID IN <parameter:ID multiple="true" refColumn="testtable.ID" />
  - TestResolveRefColumn:
      code: |-
        SELECT ID AS "___ID", name FROM testtable WHERE 1=1
          AND name = <parameter:name refColumn="testtable.name" />
  - TestResolveRefColumnIllegalAE:
      code: |-
        SELECT ID AS "___ID", name FROM testtable WHERE 1=1
          AND name = <parameter:name refColumn="public.testtable.name" />
  - TestResolveRefColumnNPE:
      code: |-
        SELECT ID AS "___ID", name FROM testtable WHERE 1=1
          AND name = <parameter:name refColumn="testtable.unknownColumn" />
  - sqlSubQuery:
      type: 1D_unknown
      code: |-
        SELECT
          t.name AS "Name",
          t.valueCol AS "Value"
        FROM (select * from testtable) t
  - testBeSqlMacros:
      type: 1D_unknown
      invisible: true
      roles: '@AllRoles'
      code: |-
        SELECT TEST_MACRO(name), TEST_MACRO(value)
        FROM testtable
  - testFreemarkerMacros:
      type: 1D_unknown
      invisible: true
      roles: '@AllRoles'
      code: |-
        SELECT <@_test_macro 'name'/>, <@_test_macro 'value'/>
        FROM testtable
  operations:
  - Edit:
      records: 1
      roles: [Administrator]
      code: java.lang.String
